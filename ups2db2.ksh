#!/QOpenSys/usr/bin/ksh93
# Written by Kirk B Wagoner
# Copyright 2018 by Kirk B Wagoner
# 
# IBM Z/os Korn shell script for importing exteremely large csv files from United Parcel Service into DB2 for later querying.
# Script is called from a Qshell script UPS2DB2.SH.

# Allow user to select the file from folder/directory default is 'input' directory/folder local to this script.
#read  -p "Enter filename, use tab for completion: " file     # Uncomment if testing in bash shell.
echo "Choose an CSV file to process and load:"
# Set input prompt for korn shell
PS3="Choose an CSV file to process and load:";     # Korn Shell Input Prompt.

# Display list of files in the input directory for user to select.
select file in ./input/*.csv;    # Change to directory/folder that contains the files you wish to import.
    do 
        if [ -n "$file" ]; 
        then break; 
        fi; 
    done; 
echo "You have chosen $file" # Display the select filename.

# Assign/Declare Variables
DATE=`date +%m%d%Y`    # Get and format date.
TIME=`date +%H%M`      # Get and format time.
infile="$file"     # The Input file the user selected from above
outfile="./tmp/tmp1.csv"     # Location and name of temp file of records for database upload
outfile_1="./tmp/tmp2.csv"     # Location and name of temp file of records to stores
outfile_r="./output/rjct1_${DATE}_${TIME}.csv"        # Location and name of temp file of rejected records (ie zipcode not in store zipcode list)
outfile_i="./output/rjct2_${DATE}_${TIME}.csv"     # Location and name of temp file of rejected records (Invoice)
sqlfile="./output/sqlfile.sql"     # Location and name of SQL file of INSERT commands
start=$SECONDS # Start time in seconds since epoch

# Sort and reject records by zipcode, returns, No zipcode
# -v option sets a variable before program/script is called.
awk -v out_r="$outfile_r" -v out_i="$outfile_i" -f zip_sort_Generic.awk "$infile";

# Set number of columns/fields to 250
echo "Equalizing number of fields"
awk -F ',' -v OFS=',' 'NF<250 {$250=""} NF>=250' $outfile_1 > $outfile
echo "Equalization complete"


end=$SECONDS    # End time in seconds since epoch.
elapsed=$((end - start))    # Calculate elapsed time.
# Display Elpased time in human readableformat.
printf 'Process completed %d:%02d:%02d - Elapsed %d:%02d:%02d\n' \
       $((end / 3600)) $((end / 60 % 60)) $((end % 60)) \
       $((elapsed / 3600)) $((elapsed / 60 % 60)) $((elapsed % 60))

# Clean and build SQL file
echo "Building SQL file, please wait this may take some time"
# Single quote non-numerical data fields       | Remove double commas|   Again            |  Add line ending  |   Add begin of line
awk -f delimit.awk /tmp/tmp1.csv | sed 's/\,,/\,0,/g' | sed 's/\,,/\,0,/g' | sed "s/\,$/\,0);/"| sed 's/^/INSERT INTO ITMDATADDL.INBNDSHP (VERSION,RECIPIENT_NUMBER,ACCOUNT_NUMBER,ACCOUNT_COUNTRY,INVOICE_DATE,INVOICE_NUMBER,INVOICE_TYPE_CODE,INVOICE_TYPE_DETAIL_CODE,ACCOUNT_TAX_ID,INVOICE_CURRENCY_CODE,INVOICE_AMOUNT,TRANSACTION_DATE,PICKUP_RECORD_NUMBER,LEAD_SHIPMENT_NUMBER,WORLD_EASE_NUMBER,SHIPMENT_REFERENCE_NUMBER_1,SHIPMENT_REFERENCE_NUMBER_2,BILL_OPTION_CODE,PACKAGE_QUANTITY,OVERSIZE_QUANTITY,TRACKING_NUMBER,PACKAGE_REFERENCE_NUMBER_1,PACKAGE_REFERENCE_NUMBER_2,PACKAGE_REFERENCE_NUMBER_3,PACKAGE_REFERENCE_NUMBER_4,PACKAGE_REFERENCE_NUMBER_5,ENTERED_WEIGHT,ENTERED_WEIGHT_UNIT_OF_MEASURE,BILLED_WEIGHT,BILLED_WEIGHT_UNIT_OF_MEASURE,CONTAINER_TYPE,BILLED_WEIGHT_TYPE,PACKAGE_DIMENSIONS,ZONE,CHARGE_CATEGORY_CODE,CHARGE_CATEGORY_DETAIL_CODE,CHARGE_SOURCE,TYPE_CODE_1,TYPE_DETAIL_CODE_1,TYPE_DETAIL_VALUE_1,TYPE_CODE_2,TYPE_DETAIL_CODE_2,TYPE_DETAIL_VALUE_2,CHARGE_CLASSIFICATION_CODE,CHARGE_DESCRIPTION_CODE,CHARGE_DESCRIPTION,CHARGED_UNIT_QUANTITY,BASIS_CURRENCY_CODE,BASIS_VALUE,TAX_INDICATOR,TRANSACTION_CURRENCY_CODE,INCENTIVE_AMOUNT,NET_AMOUNT,MISCELLANEOUS_CURRENCY_CODE,MISCELLANEOUS_INCENTIVE_AMOUNT,MISCELLANEOUS_NET_AMOUNT,ALTERNATE_INVOICING_CURRENCY_CODE,ALTERNATE_INVOICE_AMOUNT,INVOICE_EXCHANGE_RATE,TAX_VARIANCE_AMOUNT,CURRENCY_VARIANCE_AMOUNT,INVOICE_LEVEL_CHARGE,INVOICE_DUE_DATE,ALTERNATE_INVOICE_NUMBER,STORE_NUMBER,CUSTOMER_REFERENCE_NUMBER,SENDER_NAME,SENDER_COMPANY_NAME,SENDER_ADDRESS_LINE_1,SENDER_ADDRESS_LINE_2,SENDER_CITY,SENDER_STATE,SENDER_POSTAL,SENDER_COUNTRY,RECEIVER_NAME,RECEIVER_COMPANY_NAME,RECEIVER_ADDRESS_LINE_1,RECEIVER_ADDRESS_LINE_2,RECEIVER_CITY,RECEIVER_STATE,RECEIVER_POSTAL,RECEIVER_COUNTRY,THIRD_PARTY_NAME,THIRD_PARTY_COMPANY_NAME,THIRD_PARTY_ADDRESS_LINE_1,THIRD_PARTY_ADDRESS_LINE_2,THIRD_PARTY_CITY,THIRD_PARTY_STATE,THIRD_PARTY_POSTAL,THIRD_PARTY_COUNTRY,SOLD_TO_NAME,SOLD_TO_COMPANY_NAME,SOLD_TO_ADDRESS_LINE_1,SOLD_TO_ADDRESS_LINE_2,SOLD_TO_CITY,SOLD_TO_STATE,SOLD_TO_POSTAL,SOLD_TO_COUNTRY,MISCELLANEOUS_ADDRESS_QUAL_1,MISCELLANEOUS_ADDRESS_1_NAME,MISCELLANEOUS_ADDRESS_1_COMPANY_NAME,MISCELLANEOUS_ADDRESS_1_ADDRESS_LINE_1,MISCELLANEOUS_ADDRESS_1_ADDRESS_LINE_2,MISCELLANEOUS_ADDRESS_1_CITY,MISCELLANEOUS_ADDRESS_1_STATE,MISCELLANEOUS_ADDRESS_1_POSTAL,MISCELLANEOUS_ADDRESS_1_COUNTRY,MISCELLANEOUS_ADDRESS_QUAL_2,MISCELLANEOUS_ADDRESS_2_NAME,MISCELLANEOUS_ADDRESS_2_COMPANY_NAME,MISCELLANEOUS_ADDRESS_2_ADDRESS_LINE_1,MISCELLANEOUS_ADDRESS_2_ADDRESS_LINE_2,MISCELLANEOUS_ADDRESS_2_CITY,MISCELLANEOUS_ADDRESS_2_STATE,MISCELLANEOUS_ADDRESS_2_POSTAL,MISCELLANEOUS_ADDRESS_2_COUNTRY,SHIPMENT_DATE,SHIPMENT_EXPORT_DATE,SHIPMENT_IMPORT_DATE,ENTRY_DATE,DIRECT_SHIPMENT_DATE,SHIPMENT_DELIVERY_DATE,SHIPMENT_RELEASE_DATE,CYCLE_DATE,EFT_DATE,VALIDATION_DATE,ENTRY_PORT,ENTRY_NUMBER,EXPORT_PLACE,SHIPMENT_VALUE_AMOUNT,SHIPMENT_DESCRIPTION,ENTERED_CURRENCY_CODE,CUSTOMS_NUMBER,EXCHANGE_RATE,MASTER_AIR_WAYBILL_NUMBER,EPU,ENTRY_TYPE,CPC_CODE,LINE_ITEM_NUMBER,GOODS_DESCRIPTION,ENTERED_VALUE,DUTY_AMOUNT,WEIGHT,UNIT_OF_MEASURE,ITEM_QUANTITY,ITEM_QUANTITY_UNIT_OF_MEASURE,IMPORT_TAX_ID,DECLARATION_NUMBER,CARRIER_NAME,CCCD_NUMBER,CYCLE_NUMBER,FOREIGN_TRADE_REFERENCE_NUMBER,JOB_NUMBER,TRANSPORT_MODE,TAX_TYPE,TARIFF_CODE,TARIFF_RATE,TARIFF_TREATMENT_NUMBER,CONTACT_NAME,CLASS_NUMBER,DOCUMENT_TYPE,OFFICE_NUMBER,DOCUMENT_NUMBER,DUTY_VALUE,TOTAL_VALUE_FOR_DUTY,EXCISE_TAX_AMOUNT,EXCISE_TAX_RATE,GST_AMOUNT,GST_RATE,ORDER_IN_COUNCIL,ORIGIN_COUNTRY,SIMA_ACCESS,TAX_VALUE,TOTAL_CUSTOMS_AMOUNT,MISCELLANEOUS_LINE_1,MISCELLANEOUS_LINE_2,MISCELLANEOUS_LINE_3,MISCELLANEOUS_LINE_4,MISCELLANEOUS_LINE_5,PAYER_ROLE_CODE,MISCELLANEOUS_LINE_7,MISCELLANEOUS_LINE_8,MISCELLANEOUS_LINE_9,MISCELLANEOUS_LINE_10,MISCELLANEOUS_LINE_11,DUTY_RATE,VAT_BASIS_AMOUNT,VAT_AMOUNT,VAT_RATE,OTHER_BASIS_AMOUNT,OTHER_AMOUNT,OTHER_RATE,OTHER_CUSTOMS_NUMBER_INDICATOR,OTHER_CUSTOMS_NUMBER,CUSTOMS_OFFICE_NAME,PACKAGE_DIMENSION_UNIT_OF_MEASURE,ORIGINAL_SHIPMENT_PACKAGE_QUANTITY,PLACE_HOLDER_24,PLACE_HOLDER_25,PLACE_HOLDER_26,PLACE_HOLDER_27,PLACE_HOLDER_28,PLACE_HOLDER_29,PLACE_HOLDER_30,PLACE_HOLDER_31,BOL_#_1,BOL_#_2,BOL_#_3,BOL_#_4,BOL_#_5,PO_#_1,PO_#_2,PO_#_3,PO_#_4,PO_#_5,PO_#_6,PO_#_7,PO_#_8,PO_#_9,PO_#_10,NMFC,DETAIL_CLASS,FREIGHT_SEQUENCE_NUMBER,DECLARED_FREIGHT_CLASS,PLACE_HOLDER_34,PLACE_HOLDER_35,PLACE_HOLDER_36,PLACE_HOLDER_37,PLACE_HOLDER_38,PLACE_HOLDER_39,PLACE_HOLDER_40,PLACE_HOLDER_41,PLACE_HOLDER_42,PLACE_HOLDER_43,PLACE_HOLDER_44,PLACE_HOLDER_45,PLACE_HOLDER_46,PLACE_HOLDER_47,PLACE_HOLDER_48,PLACE_HOLDER_49,PLACE_HOLDER_50,PLACE_HOLDER_51,PLACE_HOLDER_52,PLACE_HOLDER_53,PLACE_HOLDER_54,PLACE_HOLDER_55,PLACE_HOLDER_56,PLACE_HOLDER_57,PLACE_HOLDER_58,PLACE_HOLDER_59) VALUES (/' > ./output/sqlfile.sql
echo "SQL file generation complete."

end=$SECONDS    # End time in seconds since epoch.
elapsed=$((end - start))    # Calculate elapsed time.
# Display Elpased time in human readableformat.
printf 'Process completed %d:%02d:%02d - Elapsed %d:%02d:%02d\n' \
       $((end / 3600)) $((end / 60 % 60)) $((end % 60)) \
       $((elapsed / 3600)) $((elapsed / 60 % 60)) $((elapsed % 60))
